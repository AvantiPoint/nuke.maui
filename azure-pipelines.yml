# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [AzurePipelines (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration AzurePipelines --host AzurePipelines
#
# </auto-generated>
# ------------------------------------------------------------------------------

trigger:
  branches:
    include:
    - master

variables:
- name: DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION
  value: true
- name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
  value: true
- name: DOTNET_NOLOGO
  value: true
- name: DOTNET_CLI_TELEMETRY_OPTOUT
  value: true

stages:
- stage: build
  displayName: 'Build'
  jobs:
  - job: android-build
    displayName: 'Android Build'
    steps:
    - checkout: self
      fetchDepth: 0
      clean: true
    - task: Cache@2
      displayName: Cache (nuke-temp)
      inputs:
        key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj
        restoreKeys: $(Agent.OS) | nuke-temp
        path: .nuke/temp
    - task: Cache@2
      displayName: Cache (nuget-packages)
      inputs:
        key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj
        restoreKeys: $(Agent.OS) | nuget-packages
        path: $(USERPROFILE)/.nuget/packages
    - script: |
        ./build.cmd CompileAndroid
      displayName: 'Run ./build.cmd CompileAndroid'
      env:
        AndroidKeystoreName: $(ANDROID_KEYSTORE_NAME)
        AndroidKeystoreB64: $(ANDROID_KEYSTORE_B64)
        AndroidKeystorePassword: $(ANDROID_KEYSTORE_PASSWORD)
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: android-build
        targetPath: 'artifacts/android-build'
  - job: ios-build
    displayName: 'iOS Build'
    steps:
    - checkout: self
      fetchDepth: 0
      clean: true
    - task: Cache@2
      displayName: Cache (nuke-temp)
      inputs:
        key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj
        restoreKeys: $(Agent.OS) | nuke-temp
        path: .nuke/temp
    - task: Cache@2
      displayName: Cache (nuget-packages)
      inputs:
        key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj
        restoreKeys: $(Agent.OS) | nuget-packages
        path: $(HOME)/.nuget/packages
    - script: |
        ./build.sh CompileIos
      displayName: 'Run ./build.sh CompileIos'
      env:
        P12B64: $(P12B64)
        P12Password: $(P12PASSWORD)
        AppleIssuerId: $(APPLE_ISSUER_ID)
        AppleKeyId: $(APPLE_KEY_ID)
        AppleAuthKeyP8: $(APPLE_AUTH_KEY_P8)
        AppleProfileId: $(IOS_PROVISIONING_PROFILE)
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: ios-build
        targetPath: 'artifacts/ios-build'
  - job: compile-library
    displayName: 'Compile Library'
    steps:
    - checkout: self
      fetchDepth: 0
      clean: true
    - task: Cache@2
      displayName: Cache (nuke-temp)
      inputs:
        key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj
        restoreKeys: $(Agent.OS) | nuke-temp
        path: .nuke/temp
    - task: Cache@2
      displayName: Cache (nuget-packages)
      inputs:
        key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj
        restoreKeys: $(Agent.OS) | nuget-packages
        path: $(USERPROFILE)/.nuget/packages
    - script: |
        ./build.cmd CompileLib --solution AvantiPoint.Nuke.Maui.sln --project-name AvantiPoint.Nuke.Maui
      displayName: 'Run ./build.cmd CompileLib --solution AvantiPoint.Nuke.Maui.sln --project-name AvantiPoint.Nuke.Maui'
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: nuget
        targetPath: 'artifacts'
- stage: deploy
  displayName: 'Deploy'
  jobs:
  - job: publish-internal
    displayName: 'Publish Internal'
    steps:
    - checkout: self
      fetchDepth: 0
      clean: true
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: nuget
        path: 'artifacts/nuget'
    - task: Cache@2
      displayName: Cache (nuke-temp)
      inputs:
        key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj
        restoreKeys: $(Agent.OS) | nuke-temp
        path: .nuke/temp
    - task: Cache@2
      displayName: Cache (nuget-packages)
      inputs:
        key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj
        restoreKeys: $(Agent.OS) | nuget-packages
        path: $(USERPROFILE)/.nuget/packages
    - script: |
        ./build.cmd PublishNuGet
      displayName: 'Run ./build.cmd PublishNuGet'
      env:
        InHouseNugetFeed: $(IN_HOUSE_NUGET_FEED)
        InHouseApiKey: $(IN_HOUSE_API_KEY)
        AzureKeyVault: $(CODESIGNKEYVAULT)
        AzureKeyVaultCertificate: $(CODESIGNCERTIFICATE)
        AzureKeyVaultClientId: $(CODESIGNCLIENTID)
        AzureKeyVaultClientSecret: $(CODESIGNCLIENTSECRET)
        AzureKeyVaultTenantId: $(CODESIGNTENANTID)
